<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingzhi.crm.customer.mapper.CustomerPublicGroupMapper">
    
    <resultMap type="CustomerPublicGroup" id="CustomerPublicGroupResult">
        <result property="id"    column="id"    />
        <result property="publicGroupName"    column="public_group_name"    />
        <result property="pPublicGroupId"    column="p_public_group_id"    />
        <result property="publicGourpLevel"    column="public_gourp_level"    />
        <result property="createdUserName"    column="created_user_name"    />
        <result property="createdUserAccount"    column="created_user_account"    />
        <result property="createdTime"    column="created_time"    />
        <result property="updatedUserName"    column="updated_user_name"    />
        <result property="updatedUserAccount"    column="updated_user_account"    />
        <result property="updatedTime"    column="updated_time"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="tenantId"    column="tenant_id"    />
    </resultMap>

    <sql id="selectCustomerPublicGroupVo">
        select id, public_group_name, p_public_group_id, public_gourp_level, created_user_name, created_user_account, created_time, updated_user_name, updated_user_account, updated_time, is_delete, tenant_id from customer_public_group
    </sql>

    <select id="selectCustomerPublicGroupList" parameterType="CustomerPublicGroup" resultMap="CustomerPublicGroupResult">
        <include refid="selectCustomerPublicGroupVo"/>
        <where>  
            <if test="publicGroupName != null  and publicGroupName != ''"> and public_group_name like concat('%', #{publicGroupName}, '%')</if>
            <if test="pPublicGroupId != null "> and p_public_group_id = #{pPublicGroupId}</if>
            <if test="publicGourpLevel != null "> and public_gourp_level = #{publicGourpLevel}</if>
            <if test="createdUserName != null  and createdUserName != ''"> and created_user_name like concat('%', #{createdUserName}, '%')</if>
            <if test="createdUserAccount != null  and createdUserAccount != ''"> and created_user_account = #{createdUserAccount}</if>
            <if test="createdTime != null "> and created_time = #{createdTime}</if>
            <if test="updatedUserName != null  and updatedUserName != ''"> and updated_user_name like concat('%', #{updatedUserName}, '%')</if>
            <if test="updatedUserAccount != null  and updatedUserAccount != ''"> and updated_user_account = #{updatedUserAccount}</if>
            <if test="updatedTime != null "> and updated_time = #{updatedTime}</if>
            <if test="isDelete != null "> and is_delete = #{isDelete}</if>
            <if test="tenantId != null "> and tenant_id = #{tenantId}</if>
        </where>
    </select>
    
    <select id="selectCustomerPublicGroupById" parameterType="Long" resultMap="CustomerPublicGroupResult">
        <include refid="selectCustomerPublicGroupVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCustomerPublicGroup" parameterType="CustomerPublicGroup" useGeneratedKeys="true" keyProperty="id">
        insert into customer_public_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="publicGroupName != null">public_group_name,</if>
            <if test="pPublicGroupId != null">p_public_group_id,</if>
            <if test="publicGourpLevel != null">public_gourp_level,</if>
            <if test="createdUserName != null">created_user_name,</if>
            <if test="createdUserAccount != null">created_user_account,</if>
            <if test="createdTime != null">created_time,</if>
            <if test="updatedUserName != null">updated_user_name,</if>
            <if test="updatedUserAccount != null">updated_user_account,</if>
            <if test="updatedTime != null">updated_time,</if>
            <if test="isDelete != null">is_delete,</if>
            <if test="tenantId != null">tenant_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="publicGroupName != null">#{publicGroupName},</if>
            <if test="pPublicGroupId != null">#{pPublicGroupId},</if>
            <if test="publicGourpLevel != null">#{publicGourpLevel},</if>
            <if test="createdUserName != null">#{createdUserName},</if>
            <if test="createdUserAccount != null">#{createdUserAccount},</if>
            <if test="createdTime != null">#{createdTime},</if>
            <if test="updatedUserName != null">#{updatedUserName},</if>
            <if test="updatedUserAccount != null">#{updatedUserAccount},</if>
            <if test="updatedTime != null">#{updatedTime},</if>
            <if test="isDelete != null">#{isDelete},</if>
            <if test="tenantId != null">#{tenantId},</if>
         </trim>
    </insert>

    <update id="updateCustomerPublicGroup" parameterType="CustomerPublicGroup">
        update customer_public_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="publicGroupName != null">public_group_name = #{publicGroupName},</if>
            <if test="pPublicGroupId != null">p_public_group_id = #{pPublicGroupId},</if>
            <if test="publicGourpLevel != null">public_gourp_level = #{publicGourpLevel},</if>
            <if test="createdUserName != null">created_user_name = #{createdUserName},</if>
            <if test="createdUserAccount != null">created_user_account = #{createdUserAccount},</if>
            <if test="createdTime != null">created_time = #{createdTime},</if>
            <if test="updatedUserName != null">updated_user_name = #{updatedUserName},</if>
            <if test="updatedUserAccount != null">updated_user_account = #{updatedUserAccount},</if>
            <if test="updatedTime != null">updated_time = #{updatedTime},</if>
            <if test="isDelete != null">is_delete = #{isDelete},</if>
            <if test="tenantId != null">tenant_id = #{tenantId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCustomerPublicGroupById" parameterType="Long">
        delete from customer_public_group where id = #{id}
    </delete>

    <delete id="deleteCustomerPublicGroupByIds" parameterType="String">
        delete from customer_public_group where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>